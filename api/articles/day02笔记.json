{"title":"day02笔记","slug":"day02笔记","date":"2016-12-21T10:35:21.092Z","updated":"2016-12-21T10:20:23.629Z","comments":true,"path":"api/articles/day02笔记.json","excerpt":"","raw":"---\ntitle: day02笔记\n---\n###02.01_Java语言基础(常量的概述和使用)(掌握)\n* A:什么是常量\n\t* 在程序执行的过程中其值不可以发生改变 \n* B:Java中常量的分类\n\t* 字面值常量\n\t* 自定义常量(面向对象部分讲) \n* C:字面值常量的分类\n\t* 字符串常量\t用双引号括起来的内容\n\t* 整数常量\t\t所有整数\n\t* 小数常量\t\t所有小数\n\t* 字符常量\t\t用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号\n\t* 布尔常量\t\t较为特殊，只有true和false\n\t* 空常量\t\t    null(数组部分讲解)\n\n* D:案例演示\n\t* 用输出语句输出各种常量。null不演示\n\t\t\t\n###02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解)\n* A:什么是进制\n\t* 进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制--X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。\n\t* 例如一周有七天,七进制,一年有十二个月,十二进制\n* B:十进制的由来 \n\t* 十进制的由来是因为人类有十个手指 \n* C:二进制的由来\n\t* 其实二进制来源与中国,请看史料记载\n\t* 18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。\n* D:八进制的由来\n\t* 任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。 \n\t* 所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。 \n* E:十六进制的由来\n\t* 但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。\n* F:不同进制表现同一个数据的形式特点\n\t* 进制越大，表现形式越短\n \n###02.03_Java语言基础(不同进制数据的表现形式)(掌握)\n* A:二进制的数据表现形式\n\t* 由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)\n* B:八进制的数据表现形式\n\t* 由0,1,…7组成。以0开头\n* C:十进制的数据表现形式\n\t* 由0,1,…9组成。整数默认是十进制的 \n* D:十六进制的数据表现形式\n\t* 由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头 \n* E:案例演示\n\t* 输出不同进制表现100的数据。\n\t* 0b100\n\t* 0100\n\t* 100\n\t* 0x100\n\t\t\n###02.04_Java语言基础(任意进制到十进制的转换图解)(了解)\n* A:任意进制到十进制的转换原理\n\t* 系数：就是每一位上的数据。\n\t* 基数：X进制，基数就是X。\n\t* 权：在右边，从0开始编号，对应位上的编号即为该位的权。\n\t* 结果：把系数*基数的权次幂相加即可。 \n* B:画图练习\n\t* 二进制--十进制\n\t* 八进制--十进制\n\t* 十六进制--十进制\n\n###02.05_Java语言基础(十进制到任意进制的转换图解)(了解)\n* A:十进制到任意进制的转换原理\n\t* 除积倒取余 \n* B:画图练习\n\t* 十进制--二进制\n\t* 十进制--八进制\n\t* 十进制--十六进制\n\t\n###02.06_Java语言基础(快速的进制转换法)(了解)\n* A:8421码及特点\n\t* 8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。 \n* B:通过8421码的方式进行二进制和十进制的相互转换\n* C:二进制到八进制的简易方式\n* D:二进制到十六进制的简易方式\n\n###02.07_Java语言基础(原码反码补码)(了解)\n* A:为什么要学习原码反码补码?\n\t* 后面要学习强制类型转换,如果不知道有原反补会看不懂结果 \n* B:有符号数据表示法的几种方式\n\t* 原码\n\t\t* 就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。\n\t\t* 通过一个字节,也就是8个二进制位表示+7和-7\n\t\t* 0(符号位)\t0000111\n\t\t* 1(符号位)\t0000111\n\t* 反码\n\t\t* 正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。\n\t* 补码\n\t\t* 正数的补码与其原码相同；负数的补码是在其反码的末位加1。 \n\n###02.08_Java语言基础(原码反码补码的练习)(了解)\n* A:已知原码求补码\n\t* 0b10110100 \n* B:已知补码求原码\n\t* 0b11101110 \n\t\n###02.09_Java语言基础(变量的概述及格式)(掌握)\n* A:什么是变量\n\t* 在程序执行的过程中，在某个范围内其值可以发生改变的量\n* B:变量的定义格式\n\t* 数据类型 变量名 = 变量值;\n* C:为什么要定义变量\n\t* 用来不断的存放同一类型的常量，并可以重复使用 \n\n###02.10_Java语言基础(数据类型的概述和分类)(掌握)\n* A:为什么有数据类型\n\t* Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间\n* B:Java中数据类型的分类\n\t* 基本数据类型\n\t* 引用数据类型 \n\t\t* 面向对象部分讲解 \n* C:基本数据类型分类(4类8种) \n\t* 整数型\n\t\t* byte 占一个字节  -128到127\n\t\t* short 占两个字  -2^15~2^15-1\n\t\t* int 占四个字节 -2^31~2^31-1\n\t\t* long 占八个字节 -2^63~2^63-1\n\t* 浮点型\n\t\t* float 占两个字节 -3.403E38~3.403E38\n\t\t* double 占四个字节-1.798E308~1.798E308\n\t* 字符型\n\t\t* char 占两个字节 0~65535\n\t* 布尔型\n\t\t* boolean   \n\t\t\t* boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小      \n\n###02.11_Java语言基础(定义不同数据类型的变量)(掌握)\n* A:案例演示\n\t* 定义不同基本数据类型的变量，并输出\n\t* 赋值时候注意float类型,long类型\n\n###02.12_Java语言基础(使用变量的注意事项)(掌握)\n* A:案例演示\n\t* a:作用域问题\n\t\t* 同一个区域不能使用相同的变量名 \n\t* b:初始化值问题\n\t\t* 局部变量在使用之前必须赋值 \n\t* c:一条语句可以定义几个变量\n\t\t* int a,b,c...; \n\n###02.13_Java语言基础(数据类型转换之隐式转换)(掌握)\n* A:案例演示\n\t* a:int + int\n\t* b:byte + int \n* B:Java中的默认转换规则\n\t* 取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算 \n* C:画图解释byte+int类型的问题\n\n###02.14_Java语言基础(数据类型转换之强制转换)(掌握)\n* A:强制转换问题\n\t* int a = 10;\n\t* byte b = 20; \n\t* b = a + b;\n* B:强制转换的格式\n\t* b = (byte)(a + b); \n* C:强制转换的注意事项\n\t* 如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同 \n\n###02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握)\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* byte b1 = 3;\n\t* byte b2 = 4;\n\t* byte b3 = b1 + b2;\n\t\t* 从两方面去回答这个题\n\t\t* b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值\n\t\t* byte类型的变量在进行运算的时候,会自动类型提升为int类型 \n\t* byte b4 = 3 + 4;\n\t\t* 3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了 \n\t\t\n###02.16_Java语言基础(long与float的取值范围谁大谁小)(了解)\n* 进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的\n\t* byte,short,char -- int -- long -- float -- double\n\t\n\t* long: 8个字节\n\t* float：4个字节\n\t* IEEE754\n\t* 4个字节是32个二进制位\n\t* 1位是符号位\n\t* 8位是指数位\n\t* 00000000   11111111\n\t* 0到255\n\t* 1到254\n\t* -126到127\n\t* 23位是尾数位\n\t* 每个指数位减去127\n\t\n\t* A:它们底层的存储结构不同。\n\t* B:float表示的数据范围比long的范围要大\n\t\t* long：2^63-1\n\t\t* float：3.4*10^38 > 2*10^38 > 2*8^38 = 2*2^3^38 = 2*2^114 > 2^63-1\n\n###02.17_Java语言基础(字符和字符串参与运算)(掌握)\n* A:案例演示\n\t* System.out.println('a');\n\t* System.out.println('a'+1);\n\t\n\t* 通过看结果知道'a'的值是多少,由此引出ASCII码表\n* B:ASCII码表的概述\n\t* 记住三个值：\n\t\t* '0'  48\n\t\t* 'A'  65\n\t\t* 'a'  97\n* C:案例演示\n\t* System.out.println(\"hello\"+'a'+1);\n\t* System.out.println('a'+1+\"hello\");\n* D:+在有字符串参与中被称为字符串连接符\n\t* System.out.println(\"5+5=\"+5+5);\n\t* System.out.println(5+5+\"=5+5\");\n\t\n###02.18_Java语言基础(char数据类型)(掌握)\n* A:char c = 97;\t0到65535\n* B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢?\n\t* 可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节\n\t* 所以，Java中的字符可以存储一个中文汉字\n###02.19_Java语言基础(算术运算符的基本用法)(掌握)\n* A:什么是运算符\n\t* 就是对常量和变量进行操作的符号。\n* B:运算符的分类\n\t* 算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符 \n* C:算数运算符有哪些\n\t* +,-,*,/,%,++,-- \n* D:注意事项：\n\t* a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符\n\t* b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型\n\t* c:/获取的是除法操作的商，%获取的是除法操作的余数\n\t* %运算符\n\t\t* 当左边的绝对值小于右边绝对值时,结果是左边\n\t\t* 当左边的绝对值等于右边或是右边的倍数时,结果是0\n\t\t* 当左边的绝对值大于右边绝对值时,结果是余数\n\t\t* %运算符结果的符号只和左边有关系,与右边无关\n\t\t* 任何一个正整数%2结果不是0就是1可以用来当作切换条件 \n\n###02.20_Java语言基础(算术运算符++和--的用法)(掌握)\n* A:++,--运算符的作用\n\t* 自加（++）自减（--）运算\n\t* ++:自加。对原有的数据进行+1\n\t* --:自减。对原有的数据进行-1\n* B:案例演示\n\t* a:单独使用：\n\t\t* 放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)\n\t* b:参与运算使用：\n\t\t* 放在操作数的前面，先自增或者自减，然后再参与运算。\n\t\t* 放在操作数的后面，先参与运算，再自增或者自减。\n\n###02.21_Java语言基础(算术运算符++和--的练习)(掌握)\n* A:案例演示\n\t* 请分别计算出a,b,c的值?\n\t* \n\t\t\tint a = 10;\n\t\t\tint b = 10;\n\t\t\tint c = 10;\n\t\t\n\t\t\ta = b++;\t\t\n\t\t\tc = --a;\t\t\t\n\t\t\tb = ++a;\t\t\n\t\t\ta = c--;\t\t\t\n\t\n* B:案例演示\n\t* 请分别计算出x,y的值?\n\t\n\t\t\tint x = 4;\n\t\t\tint y = (x++)+(++x)+(x*10);\n* C:面试题\n\t* byte b = 10;\n\t* b++;\n\t* b = b + 1;\n\t* 问哪句会报错,为什么 \n\n###02.22_Java语言基础(赋值运算符的基本用法)(掌握)\n* A:赋值运算符有哪些\n\t* a:基本的赋值运算符：=\n\t\t* 把=右边的数据赋值给左边。\n\t\t\n\t* b:扩展的赋值运算符：+=,-=,*=,/=,%=\n\t\t* += 把左边和右边做加法，然后赋值给左边。\n\t\n###02.23_Java语言基础(赋值运算符的面试题)(掌握)\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* short s=1;s = s+1;\n\t* short s=1;s+=1;\n\n###02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握)\n* A:关系运算符有哪些(比较运算符,条件运算符)\n\t* ==,!=,>,>=,<,<= \n* 注意事项：\n\t* 无论你的操作是简单还是复杂，结果是boolean类型。\n\t\n\t* \"==\"不能写成\"=\"。\n\n###02.25_day02总结\n* 把今天的知识点总结一遍。","categories":[],"tags":[]}
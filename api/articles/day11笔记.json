{"title":"day11笔记","slug":"day11笔记","date":"2016-12-21T10:59:08.130Z","updated":"2016-12-21T10:22:20.694Z","comments":true,"path":"api/articles/day11笔记.json","excerpt":"","raw":"---\ntitle: day11笔记\n---\n###11.01_Java开发工具(常见开发工具介绍)(了解)\n* A:操作系统自带的记事本软件\n* B:高级记事本软件\n* C:集成开发环境 IDE\n\t* (Integrated Development Environment)\n* D:Eclipse和MyEclipse的区别\n\t* a:Eclipse是一种可扩展的开放源代码的IDE。\n\t* b:Eclipse的特点描述\n\t\t* 免费\n\t\t* 纯Java语言编写\n\t\t* 免安装\n\t\t* 扩展性强\n\t* c:MyEclipse\n\t\t* 在Eclipse基础上追加的功能性插件，对插件收费\n\t\t* 在WEB开发中提供强大的系统架构平台\n* E:下载 http://eclipse.org/\n\t* org是非盈利团体 \n* F:安装\n\t* 绿色版\t解压就可以使用(Eclipse)\n\t* 安装版   双击运行,一路next即可(JDK)\n* G:卸载\n\t* 绿色版\t直接删除文件夹即可\n\t* 安装版 专业卸载软件或者控制面板添加删除程序\n\n###11.02_Java开发工具(Eclipse中HelloWorld案例以及汉化)(了解)\n* A:选择工作空间\n\t* 工作空间  其实就是我们写的源代码所在的目录\n* B:用Eclipse来完成一个HelloWorld案例\n\t* 代码以项目为基本单位\n\t* 创建项目\n\t* 创建包\n\t* 创建类\n\t* 编写代码\n* C:编译和运行\n* D:Eclipse的汉化\n\t* 从Eclipse3.5开始，安装目录下就多了一个dropins目录,只要将插件解压后放到到该目录即可。\n\t* 同理，这种方式卸载插件也是特别的方便，推荐这种方式\n* E:语法检查提示\n\t* 红色波浪线\n\t\t* 必须处理,否则编译通不过\n\t* 黄色波浪线\t\n\t\t* 可以不搭理他 \n\n###11.03_Java开发工具(Eclipse的视窗和视图概述)(了解)\n* A:视窗  每一个基本的窗体被称为视窗\n\t* PackageExplorer  显示项目结构，包，类，及资源\n\t* Outline   显示类的结构，方便查找，识别，修改\n\t* Console  程序运行的结果在该窗口显示\n\t* Hierarchy 显示Java继承层次结构，选中类后F4\n* B:视图  是由某些视窗的组合而成的\n\t* Java视图\n\t* Debug视图\n\n###11.04_Java开发工具(Eclipse工作空间的基本配置)(掌握)\n* A:程序的编译和运行的环境配置(一般不改)\n\t* window -- Preferences -- Java\n\t* 编译环境：Compiler\t默认选中的就是最高版本。\n\t* 运行环境：Installed JREs\t默认会找你安装的那个JDK。建议配置了Java的环境变量。\n\t* 问题：\n\t\t* 低编译，高运行。可以。\n\t\t* 高编译，低运行。不可以。\n\t\t* 建议，编译和运行的版本一致。\n* B:如何去掉默认注释?\n\t* window -- Preferences -- Java -- Code Style -- Code Templates\n\t* 选择你不想要的内容，通过右边Edit编辑。\n\t* 注意：请只删除注释部分，不是注释部分的不要删除。\n* C:行号的显示和隐藏\n\t* 显示：在代码区域的最左边的空白区域，右键 -- Show Line Numbers即可。\n\t* 隐藏：把上面的动作再做一次。\n* D:字体大小及颜色\n\t* a:Java代码区域的字体大小和颜色：\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts --Java修改 -- Java Edit Text Font\n\t* b:控制台\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Debug -- Console font\n\t* c:其他文件\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Basic -- Text Font\n* E:窗体给弄乱了，怎么办?\n\t* window -- Reset Perspective\n* F:控制台找不到了，怎么办?\n\t* Window--Show View—Console\n* G:取消悬浮提示\n\t* window -- Preferences -- Java--Editor--Hovers。右边将Combined Hover勾去掉。\n\t* 这样代码的悬浮框就不会自动出现了。如果想看提示，将光标悬浮在代码上，按F2即可。\n \n###11.05_Java开发工具(Eclipse中内容辅助键的使用)(掌握)\n* A:Alt+/ 起提示作用\n* B:main+alt+/,syso+alt+/,给出其他提示\n* C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可\n* C:定义自己的alt + /\n\t* windows--perference-Java-Editor-Templates--New\n\n###11.06_Java开发工具(Eclipse中快捷键的使用)(掌握)\n* A:新建 ctrl + n\n* B:格式化  ctrl+shift+f\n* C:导入包  ctrl+shift+o \n* D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\\\n* E:代码上下移动 选中代码alt+上/下箭头\n* F:查看源码  选中类名(F3或者Ctrl+鼠标点击)\n* G:查找具体的类 ctrl + shift + t\n* H:查找具体类的具体方法 ctrl + o\n* I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法\n* J:删除代码 ctrl + d\n* K:抽取方法alt + shift + m \n* L:改名alt + shift + r \n* \n\n###11.07_Java开发工具(Eclipse中如何提高开发效率)(掌握)\n* alt + shift + s\n* A:自动生成构造方法\n* B:自动生成get/set方法\n\n###11.08_Java开发工具(Eclipse中一个标准学生类及其测试)(掌握)\n* A:案例演示\n\t* 用Eclipse实现标准学生类及其测试\n\n###11.09_Java开发工具(Eclipse中接口抽象类具体类代码体现)(掌握)\n* A:案例演示\n\t* 用Eclipse实现接口抽象类具体类代码\n\n###11.10_Java开发工具(Eclipse中如何生成jar包并导入到项目中)(了解)\n* A:jar是什么?\n\t* jar是多个class文件的压缩包。\n* B:jar有什么用?\n\t* 用别人写好的东西\t\n* C:打jar包\n\t* 选中项目--右键--Export--Java--Jar--自己指定一个路径和一个名称--Finish\n* D:导入jar包\n\t* 复制到项目路径下并添加至构建路径。\n\n\n###11.11_Java开发工具(Eclipse中如何删除项目和导入项目)(掌握)\n* A:删除项目\n\t* 选中项目 – 右键 – 删除\n\t\t* 从项目区域中删除\n\t\t* 从硬盘上删除\n* B:导入项目\n\t* 在项目区域右键找到import\n\t* 找到General，展开，并找到\n\t* Existing Projects into Workspace\n\t* 点击next,然后选择你要导入的项目\n\t* 注意：这里选择的是项目名称\n\n###11.12_Java开发工具(Eclipse中断点调试的基本使用)(了解)\n* A:Debug的作用\n\t* 调试程序\n\t* 查看程序执行流程\n* B:如何查看程序执行流程\t\t\n\t* 什么是断点：\n\t\t* 就是一个标记，从哪里开始。\n\t\t\n\t* 如何设置断点：\n\t\t* 你想看哪里的程序，你就在那个有效程序的左边双击即可。\n\t\t\n\t* 在哪里设置断点：\n\t\t* 哪里不会点哪里。\n\t\t* 目前：我们就在每个方法的第一条有效语句上都加。\n\t\t\n\t* 如何运行设置断点后的程序：\n\t\t* 右键 -- Debug as -- Java Application\n\t\t\n\t* 看哪些地方：\n\t\t* Debug：断点测试的地方\n\t\t\t* 在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。\n\t\t* Variables：查看程序的变量变化\n\t\t* ForDemo：被查看的源文件\n\t\t* Console：控制台\n\t\t\n\t* 如何去断点：\n\t\t* a:再次双击即可\n\t\t* b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。\n\n###11.13_Java开发工具(Eclipse查看Java中参数传递问题)(了解)\n* A:断点演示\n\t* 断点查看Java中参数传递问题\n\n###11.14_常见对象(API概述)(了解)\n* A:API(Application Programming Interface) \n\t* 应用程序编程接口\n* B:Java API\n\t* 就是Java提供给我们使用的类，这些类将底层的实现封装了起来，\n\t* 我们不需要关心这些类是如何实现的，只需要学习这些类如何使用。\n\n###11.15_常见对象(Object类的概述)(了解)\n* A:Object类概述\n\t* 类层次结构的根类\n\t* 所有类都直接或者间接的继承自该类\n* B:构造方法\n\t* public Object()\n\t* 回想面向对象中为什么说：\n\t* 子类的构造方法默认访问的是父类的无参构造方法\n\n###11.16_常见对象(Object类的hashCode()方法)(了解)\n* A:案例演示\n\t* public int hashCode()\n\t* a:返回该对象的哈希码值。默认情况下，该方法会根据对象的地址来计算。\n\t* b:不同对象的，hashCode()一般来说不会相同。但是，同一个对象的hashCode()值肯定相同。\n\n###11.17_常见对象(Object类的getClass()方法)(在反射的时候掌握)\n* A:案例演示\n\t* public final Class getClass()\n\t* a:返回此 Object 的运行时类。\n\t* b:可以通过Class类中的一个方法，获取对象的真实类的全名称。\t\n\t\t* public String getName()\n\n###11.18_常见对象(Object类的toString()方法)(掌握)\n* A:案例演示\n\t* public String toString()\n\t* a:返回该对象的字符串表示。\n* \n\t\t\n\t\tpublic Stirng toString() {\n\t\t\treturn name + \",\" + age;\n\t\t}\n\t* b:它的值等于： \n\t\t* getClass().getName() + \"@\" + Integer.toHexString(hashCode()) \n\t* c:由于默认情况下的数据对我们来说没有意义，一般建议重写该方法。\n* B:最终版\n\t* 自动生成\n\n###11.19_常见对象(Object类的equals()方法)(掌握)\n* A:案例演示\n\t* a:指示其他某个对象是否与此对象“相等”。 \n\t* b:默认情况下比较的是对象的引用是否相同。\n\t* c:由于比较对象的引用没有意义，一般建议重写该方法。\n\n###11.20_常见对象(==号和equals方法的区别)(掌握)\n* ==是一个比较运算符号,既可以比较基本数据类型,也可以比较引用数据类型,基本数据类型比较的是值,引用数据类型比较的是地址值\n* equals方法是一个方法,只能比较引用数据类型,所有的对象都会继承Object类中的方法,如果没有重写Object类中的equals方法,equals方法和==号比较引用数据类型无区别,重写后的equals方法比较的是对象中的属性\n\n###11.21_day11总结\n* 把今天的知识点总结一遍。","categories":[],"tags":[]}
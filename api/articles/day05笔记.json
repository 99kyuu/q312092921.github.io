{"title":"day05笔记","slug":"day05笔记","date":"2016-12-21T10:38:20.906Z","updated":"2016-12-21T11:07:16.362Z","comments":true,"path":"api/articles/day05笔记.json","excerpt":"","raw":"---\ntitle: day05笔记\n---\n###05.01_Java语言基础(数组概述和定义格式说明)(了解)\n* A:为什么要有数组(容器)\n\t* 为了存储同种数据类型的多个值\n* B:数组概念\n\t* 数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。\n\t* 数组既可以存储基本数据类型，也可以存储引用数据类型。\n\n* C:数组定义格式\n\t\t* 数据类型[] 数组名 = new 数据类型[数组的长度];\n###05.02_Java语言基础(数组的初始化动态初始化)(掌握)\n* A:什么是数组的初始化\n\t* 就是为数组开辟连续的内存空间，并为每个数组元素赋予值 \n* B:如何对数组进行初始化\n\t* a:动态初始化 只指定长度，由系统给出初始化值\n\t\t*int[] arr = new int[5]; \t\n\t* b:静态初始化 给出初始化值，由系统决定长度\t\n* C:动态初始化的格式：\n\t* 数据类型[] 数组名 = new 数据类型[数组长度];\n* D:案例演示\n\t* 输出数组名称和数组元素\n\n###05.03_Java语言基础(Java中的内存分配以及栈和堆的区别)\n* A:栈(掌握)\n\t* 存储局部变量 \n* B:堆(掌握)\n\t* 存储new出来的数组或对象 \n* C:方法区\n\t* 面向对象部分讲解 \n* D:本地方法区\n\t* 和系统相关 \n* E:寄存器\n\t* 给CPU使用\n###05.04_Java语言基础(数组的内存图解1一个数组)(掌握)\n* A:画图演示\n\t* 一个数组\n\n###05.05_Java语言基础(数组的内存图解2二个数组)(了解)\n* A:画图演示\n\t* 二个不同的数组\n\n###05.06_Java语言基础(数组的内存图解3三个引用两个数组)(了解)\n* A:画图演示\n\t* 三个引用，有两个数组的引用指向同一个地址\n\n###05.07_Java语言基础(数组的初始化静态初始化及内存图)(掌握)\n* A:静态初始化的格式：\n\t* 格式：数据类型[] 数组名 = new 数据类型[]{元素1,元素2,…};\n\t* 简化格式：\n\t\t* 数据类型[] 数组名 = {元素1,元素2,…};\n* B:案例演示\n\t* 对数组的解释\n\t* 输出数组名称和数组元素\n* C:画图演示\n\t* 一个数组\n\n###05.08_Java语言基础(数组操作的两个常见小问题越界和空指针)(掌握)\n* A:案例演示\n\t* a:ArrayIndexOutOfBoundsException:数组索引越界异常\n\t\t* 原因：你访问了不存在的索引。\n\t* b:NullPointerException:空指针异常\n\t\t* 原因：数组已经不在指向堆内存了。而你还用数组名去访问元素。\n\t\t* int[] arr = {1,2,3};\n\t\t* arr = null;\n\t\t* System.out.println(arr[0]);\n\n###05.09_Java语言基础(数组的操作1遍历)(掌握)\n* A:案例演示\n\t* 数组遍历：就是依次输出数组中的每一个元素。\n\t* 数组的属性:arr.length数组的长度\n\t* 数组的最大索引:arr.length - 1;\n\t \n\t\t\tpublic static void print(int[] arr) {\n\t\t\t\tfor (int i = 0;i < arr.length ;i++ ) {\n\t\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t\t}\n\t\t\t}\n\n###05.10_Java语言基础(数组的操作2获取最值)(掌握)\n* A:案例演示\n\t* 数组获取最值(获取数组中的最大值最小值)\n\t\t\n\t\t\tpublic static int getMax(int[] arr) {\n\t\t\t\tint max = arr[0];\n\t\t\t\tfor (int i = 1;i < arr.length ;i++ ) {\t\t\t//从数组的第二个元素开始遍历\n\t\t\t\t\tif (max < arr[i]) {\t\t\t\t\t\t\t//如果max记录的值小于的数组中的元素\n\t\t\t\t\t\tmax = arr[i];\t\t\t\t\t\t\t//max记录住较大的\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn max;\n\t\t\t}\n###05.11_Java语言基础(数组的操作3反转)(掌握)\n* A:案例演示\n\t* 数组元素反转(就是把元素对调)\n\t\t\t\n\t\t\tpublic static void reverseArray(int[] arr) {\n\t\t\t\tfor (int i = 0;i < arr.length / 2 ; i++) {\n\t\t\t\t\t//arr[0]和arr[arr.length-1-0]交换\n\t\t\t\t\t//arr[1]和arr[arr.length-1-1]交换\n\t\t\t\t\t//arr[2]和arr[arr.lentth-1-2]\n\t\t\t\t\t//...\n\t\t\n\t\t\t\t\tint temp = arr[i];\n\t\t\t\t\tarr[i] = arr[arr.length-1-i];\n\t\t\t\t\tarr[arr.length-1-i] = temp;\n\t\t\t\t}\n\t\t\t}\n\n###05.12_Java语言基础(数组的操作4查表法)(掌握)\n* A:案例演示\n\t* 数组查表法(根据键盘录入索引,查找对应星期)\n\t\n\t\t\tpublic static char getWeek(int week) {\n\t\t\t\tchar[] arr = {' ','一','二','三','四','五','六','日'};\t\t//定义了一张星期表\n\t\t\t\treturn arr[week];\t\t\t\t\t\t\t\t\t\t\t//通过索引获取表中的元素\n\t\t\t}\n\n###05.13_Java语言基础(数组的操作5基本查找)(掌握)\n* A:案例演示\n\t* 数组元素查找(查找指定元素第一次在数组中出现的索引)\n\t\n\t\t\tpublic static int getIndex(int[] arr,int value) {\n\t\t\t\tfor (int i = 0;i < arr.length ;i++ ) {\t\t\t\t//数组的遍历\n\t\t\t\t\tif (arr[i] == value) {\t\t\t\t\t\t\t//如果数组中的元素与查找的元素匹配\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t} \n\n###05.14_Java语言基础(二维数组概述和格式1的讲解)(了解)\n* A:二维数组概述\n* B:二维数组格式1\n\t\t* int[][] arr = new int[3][2]; \n* C:二维数组格式1的解释\n* D:注意事项\n\t* a:以下格式也可以表示二维数组\n\t\t* 1:数据类型 数组名[][] = new 数据类型[m][n];\n\t\t* 2:数据类型[] 数组名[] = new 数据类型[m][n];\n\t* B:注意下面定义的区别\n\t* \n\t\t\tint x;\n\t\t\tint y;\n\t\t\tint x,y;\n\t\t\t\n\t\t\tint[] x;\n\t\t\tint[] y[];\n\t\t\t\n\t\t\tint[] x,y[];\tx是一维数组,y是二维数组\n* E:案例演示\n\t* 定义二维数组，输出二维数组名称，一维数组名称，一个元素\n\n###05.15_Java语言基础(二维数组格式1的内存图解)(了解)\n* A:画图演示\n\t* 画图讲解上面的二维数组名称，一维数组名称，一个元素的值的问题\n\n###05.16_Java语言基础(二维数组格式2的讲解及其内存图解)(了解)\n* A:二维数组格式2\n\t\t* int[][] arr = new int[3][]; \n* B:二维数组格式2的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n###05.17_Java语言基础(二维数组格式3的讲解及其内存图解)(了解)\n* A:二维数组格式3\n\t\t* int[][] arr = {{1,2,3},{4,5},{6,7,8,9}}; \n* B:二维数组格式3的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n###05.18_Java语言基础(二维数组练习1遍历)(掌握)\n* A:案例演示\n\t* 需求：二维数组遍历\n\n\t* 外循环控制的是二维数组的长度，其实就是一维数组的个数。\n\t* 内循环控制的是一维数组的长度。\n\n\t\t\tint[][] arr = {{1,2,3},{4,5},{6,7,8,9}};\n\t\n\t\t\tfor (int i = 0;i < arr.length ;i++ ) {\t\t\t//获取到每个二维数组中的一维数组\n\t\t\t\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每个一维数组中的元素\n\t\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t\t}\n\t\n\t\t\t\tSystem.out.println();\n\t\t\t}\n###05.19_Java语言基础(二维数组练习2求和)(掌握)\n* A:案例演示\n* \n\t\t需求：公司年销售额求和\n\t\t某公司按照季度和月份统计的数据如下：单位(万元)\n\t\t第一季度：22,66,44\n\t\t第二季度：77,33,88\n\t\t第三季度：25,45,65\n\t\t第四季度：11,66,99\n\t\t\n\t\tint[][] arr = {{22,66,44},{77,33,88},{25,45,65},{11,66,99}};\n\n\t\tint sum = 0;\t\t\t\t\t\t\t\t\t//定义变量,记录每次相加的结果\n\t\tfor (int i = 0;i < arr.length ;i++ ) {\t\t\t//获取每一个一维数组\n\t\t\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每一个一维数组中的元素\n\t\t\t\tsum = sum + arr[i][j];\t\t\t\t\t//累加\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(sum);\n###05.20_Java语言基础(思考题Java中的参数传递问题及图解)(掌握)\n* A:案例演示\n* \n\t\t看程序写结果，并画内存图解释\n\t\tpublic static void main(String[] args) {\n\t\t\tint a = 10;\n\t\t\tint b = 20;\n\t\t\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\t\t\tchange(a,b);\n\t\t\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\t\n\t\t\tint[] arr = {1,2,3,4,5};\n\t\t\tchange(arr);\n\t\t\tSystem.out.println(arr[1]);\n\t\t}\n\t\n\t\tpublic static void change(int a,int b) {\n\t\t\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\t\t\ta = b;\n\t\t\tb = a + b;\n\t\t\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\t\t}\n\t\n\t\tpublic static void change(int[] arr) {\n\t\t\tfor(int x=0; x<arr.length; x++) {\n\t\t\t\tif(arr[x]%2==0) {\n\t\t\t\t\tarr[x]*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n###05.21_day05总结\n* 把今天的知识点总结一遍。","categories":[],"tags":[]}
{"title":"day21笔记","slug":"day21笔记","date":"2016-12-21T10:59:15.869Z","updated":"2016-12-21T10:23:31.282Z","comments":true,"path":"api/articles/day21笔记.json","excerpt":"","raw":"---\ntitle: day21笔记\n---\n###21.01_IO流(字符流FileReader)\n* 1.字符流是什么\n\t* 字符流是可以直接读写字符的IO流\n\t* 字符流读取字符, 就要先读取到字节数据, 然后转为字符. 如果要写出字符, 需要把字符转为字节再写出.    \n* 2.FileReader\n\t* FileReader类的read()方法可以按照字符大小读取\n* \n\t\tFileReader fr = new FileReader(\"aaa.txt\");\t\t\t\t//创建输入流对象,关联aaa.txt\n\t\tint ch;\n\t\twhile((ch = fr.read()) != -1) {\t\t\t\t\t\t\t//将读到的字符赋值给ch\n\t\t\tSystem.out.println((char)ch);\t\t\t\t\t\t//将读到的字符强转后打印\n\t\t}\n\t\t\n\t\tfr.close();\t\t\t\t\t\t\t\t\t\t\t\t//关流 \n\n###21.02_IO流(字符流FileWriter)\n* FileWriter类的write()方法可以自动把字符转为字节写出\n\n\t\tFileWriter fw = new FileWriter(\"aaa.txt\");\n\t\tfw.write(\"aaa\");\n\t\tfw.close();\n\n###21.03_IO流(字符流的拷贝)\n\tFileReader fr = new FileReader(\"a.txt\");\n\tFileWriter fw = new FileWriter(\"b.txt\");\n\t\n\tint ch;\n\twhile((ch = fr.read()) != -1) {\n\t\tfw.write(ch);\n\t}\n\t\n\tfr.close();\n\tfw.close();\n###21.04_IO流(什么情况下使用字符流)\n* 字符流也可以拷贝文本文件, 但不推荐使用. 因为读取时会把字节转为字符, 写出时还要把字符转回字节.\n* 程序需要读取一段文本, 或者需要写出一段文本的时候可以使用字符流\n* 读取的时候是按照字符的大小读取的,不会出现半个中文\n* 写出的时候可以直接将字符串写出,不用转换为字节数组\n\n###21.05_IO流(字符流是否可以拷贝非纯文本的文件)\n* 不可以拷贝非纯文本的文件\n* 因为在读的时候会将字节转换为字符,在转换过程中,可能找不到对应的字符,就会用?代替,写出的时候会将字符转换成字节写出去\n* 如果是?,直接写出,这样写出之后的文件就乱了,看不了了  \n\n###21.06_IO流(自定义字符数组的拷贝)\n*\t\n\t\t\n\t\tFileReader fr = new FileReader(\"aaa.txt\");\t\t\t//创建字符输入流,关联aaa.txt\n\t\tFileWriter fw = new FileWriter(\"bbb.txt\");\t\t\t//创建字符输出流,关联bbb.txt\n\t\t\n\t\tint len;\n\t\tchar[] arr = new char[1024*8];\t\t\t\t\t\t//创建字符数组\n\t\twhile((len = fr.read(arr)) != -1) {\t\t\t\t\t//将数据读到字符数组中\n\t\t\tfw.write(arr, 0, len);\t\t\t\t\t\t\t//从字符数组将数据写到文件上\n\t\t}\n\t\t\n\t\tfr.close();\t\t\t\t\t\t\t\t\t\t\t//关流释放资源\n\t\tfw.close();\t\n\n###21.07_IO流(带缓冲的字符流) \n* BufferedReader的read()方法读取字符时会一次读取若干字符到缓冲区, 然后逐个返回给程序, 降低读取文件的次数, 提高效率\n* BufferedWriter的write()方法写出字符时会先写到缓冲区, 缓冲区写满时才会写到文件, 降低写文件的次数, 提高效率\n* \n\t\tBufferedReader br = new BufferedReader(new FileReader(\"aaa.txt\"));\t//创建字符输入流对象,关联aaa.txt\n\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(\"bbb.txt\"));\t//创建字符输出流对象,关联bbb.txt\n\t\t\n\t\tint ch;\t\t\t\t\n\t\twhile((ch = br.read()) != -1) {\t\t//read一次,会先将缓冲区读满,从缓冲去中一个一个的返给临时变量ch\n\t\t\tbw.write(ch);\t\t\t\t\t//write一次,是将数据装到字符数组,装满后再一起写出去\n\t\t}\n\t\t\n\t\tbr.close();\t\t\t\t\t\t\t//关流\n\t\tbw.close();  \n\n\n###21.08_IO流(readLine()和newLine()方法)\t\n* BufferedReader的readLine()方法可以读取一行字符(不包含换行符号)\n* BufferedWriter的newLine()可以输出一个跨平台的换行符号\"\\r\\n\"\n* \n\t\tBufferedReader br = new BufferedReader(new FileReader(\"aaa.txt\"));\n\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(\"bbb.txt\"));\n\t\tString line;\n\t\twhile((line = br.readLine()) != null) {\n\t\t\tbw.write(line);\n\t\t\t//bw.write(\"\\r\\n\");\t\t\t\t\t//只支持windows系统\n\t\t\tbw.newLine();\t\t\t\t\t\t//跨平台的\n\t\t}\n\t\t\n\t\tbr.close();\n\t\tbw.close(); \n\n###21.09_IO流(将文本反转)\n* 将一个文本文档上的文本反转,第一行和倒数第一行交换,第二行和倒数第二行交换\n\n###21.10_IO流(LineNumberReader) \n* LineNumberReader是BufferedReader的子类, 具有相同的功能, 并且可以统计行号\n\t* 调用getLineNumber()方法可以获取当前行号\n\t* 调用setLineNumber()方法可以设置当前行号\n* \n\t\tLineNumberReader lnr = new LineNumberReader(new FileReader(\"aaa.txt\"));\n\t\tString line;\n\t\tlnr.setLineNumber(100);\t\t\t\t\t\t\t\t\t//设置行号\n\t\twhile((line = lnr.readLine()) != null) {\n\t\t\tSystem.out.println(lnr.getLineNumber() + \":\" + line);//获取行号\n\t\t}\n\t\t\n\t\tlnr.close(); \n\n###21.11_IO流(装饰设计模式)\n\n* \n\t\tinterface Coder {\n\t\t\tpublic void code();\n\t\t}\n\t\t\n\t\tclass Student implements Coder {\n\t\t\n\t\t\t@Override\n\t\t\tpublic void code() {\n\t\t\t\tSystem.out.println(\"javase\");\n\t\t\t\tSystem.out.println(\"javaweb\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tclass HeiMaStudent implements Coder {\n\t\t\tprivate Student s;\t\t\t\t\t\t//获取到被包装的类的引用\n\t\t\tpublic ItcastStudent(Student s) {\t\t//通过构造函数创建对象的时候,传入被包装的对象\n\t\t\t\tthis.s = s;\n\t\t\t}\n\t\t\t@Override\n\t\t\tpublic void code() {\t\t\t\t\t//对其原有功能进行升级\n\t\t\t\ts.code();\n\t\t\t\tSystem.out.println(\"数据库\");\n\t\t\t\tSystem.out.println(\"ssh\");\n\t\t\t\tSystem.out.println(\"安卓\");\n\t\t\t\tSystem.out.println(\".....\");\n\t\t\t}\n\t\t\t\n\t\t} \n\n###21.12_IO流(使用指定的码表读写字符) \n* FileReader是使用默认码表读取文件, 如果需要使用指定码表读取, 那么可以使用InputStreamReader(字节流,编码表)\n* FileWriter是使用默认码表写出文件, 如果需要使用指定码表写出, 那么可以使用OutputStreamWriter(字节流,编码表)\n* \n\t\tBufferedReader br = \t\t\t\t\t\t\t\t\t//高效的用指定的编码表读\n\t\t\t\tnew BufferedReader(new InputStreamReader(new FileInputStream(\"UTF-8.txt\"), \"UTF-8\"));\n\t\tBufferedWriter bw = \t\t\t\t\t\t\t\t\t//高效的用指定的编码表写\n\t\t\t\tnew BufferedWriter(new OutputStreamWriter(new FileOutputStream(\"GBK.txt\"), \"GBK\"));\n\t\tint ch;\n\t\twhile((ch = br.read()) != -1) {\n\t\t\tbw.write(ch);\n\t\t}\n\t\t\n\t\tbr.close();\n\t\tbw.close();\n###21.13_IO流(转换流图解)\n* 画图分析转换流\n\n###21.14_IO流(获取文本上字符出现的次数)\n* 获取一个文本上每个字符出现的次数,将结果写在times.txt上\n\n###21.15_IO流(试用版软件)\n* 当我们下载一个试用版软件,没有购买正版的时候,每执行一次就会提醒我们还有多少次使用机会用学过的IO流知识,模拟试用版软件,试用10次机会,执行一次就提示一次您还有几次机会,如果次数到了提示请购买正版\n\n###21.16_File类(递归)\n* 5的阶乘\t\n\n###21.17_File类(练习)\n* 需求:从键盘输入接收一个文件夹路径,打印出该文件夹下所有的.java文件名\n\n###21.18_IO流(总结)\n* 1.会用BufferedReader读取GBK码表和UTF-8码表的字符\n* 2.会用BufferedWriter写出字符到GBK码表和UTF-8码表的文件中\n* 3.会使用BufferedReader从键盘读取一行\n","categories":[],"tags":[]}
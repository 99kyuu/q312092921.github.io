{"title":"day04笔记","slug":"day04笔记","date":"2016-12-21T10:36:41.006Z","updated":"2016-12-21T10:20:34.903Z","comments":true,"path":"api/articles/day04笔记.json","excerpt":"","raw":"---\ntitle: day04笔记\n---\n###04.01_Java语言基础(循环结构概述和for语句的格式及其使用)\n* A:循环结构的分类\n\t* for,while,do...while \n* B:循环结构for语句的格式：\n* \n\t\tfor(初始化表达式;条件表达式;循环后的操作表达式) {\n\t\t\t循环体;\n\t\t}\n* C执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行循环后的操作表达式\n\t* e:回到B继续。\n* D:案例演示\n\t* 在控制台输出10次\"helloworld\"\n\t\n###04.02_Java语言基础(循环结构for语句的练习之获取数据)\n* A:案例演示\n\t* 需求：请在控制台输出数据1-10\n\t* 需求：请在控制台输出数据10-1\n* B:注意事项\n\t* a:判断条件语句无论简单还是复杂结果是boolean类型。\n\t* b:循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。\n\t* c:一般来说：有左大括号就没有分号，有分号就没有左大括号\n\n###04.03_Java语言基础(循环结构for语句的练习之求和思想)\n* A:案例演示\n\t* 需求：求出1-10之间数据之和\n* B:学生练习\n\t* 需求：求出1-100之间偶数和\n\t* 需求：求出1-100之间奇数和\n\n###04.04_Java语言基础(循环结构for语句的练习之水仙花)\n* A:案例演示\n\t* 需求：在控制台输出所有的”水仙花数”\n\n\t* 所谓的水仙花数是指一个三位数，其各位数字的立方和等于该数本身。\n\t* 举例：153就是一个水仙花数。\n\t* 153 = 1*1*1 + 5*5*5 + 3*3*3 = 1 + 125 + 27 = 153\n\n###04.05_Java语言基础(循环结构for语句的练习之统计思想)\n* A:案例演示\n\t* 需求：统计”水仙花数”共有多少个\n\n###04.06_Java语言基础(循环结构while语句的格式和基本使用)\n* A:循环结构while语句的格式：\n* \t\t\n\t\twhile循环的基本格式：\n\t\twhile(判断条件语句) {\n\t\t\t循环体语句;\n\t\t}\n\t\t\n\t\t完整格式：\n\t\t\n\t\t初始化语句;\n\t    while(判断条件语句) {\n\t\t\t 循环体语句;\n\t\t\t 控制条件语句;\n\t\t}\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行控制条件语句\n\t* e:回到B继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n###04.07_Java语言基础(循环结构while语句的练习)\n* A:求和思想\n\t* 求1-100之和\n* B:统计思想\n\t* 统计”水仙花数”共有多少个\n\n###04.08_Java语言基础(循环结构do...while语句的格式和基本使用)\n* A:循环结构do...while语句的格式：\n* \n\t\tdo {\n\t\t\t循环体语句;\n\t\t}while(判断条件语句);\n\t\t\n\t\t完整格式；\n\t\t初始化语句;\n\t\tdo {\n\t\t\t循环体语句;\n\t\t\t控制条件语句;\n\t\t}while(判断条件语句);\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行循环体语句;\n\t* c:执行控制条件语句\n\t* d:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* e:回到b继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n###04.09_Java语言基础(循环结构三种循环语句的区别)\n* A:案例演示\n\t* 三种循环语句的区别:\n\t* do...while循环至少执行一次循环体。\n\t* 而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。\n* B:案例演示\n\t* for循环和while循环的区别：\n\t\t* A:如果你想在循环结束后，继续使用控制条件的那个变量，用while循环，否则用for循环。不知道用谁就用for循环。因为变量及早的从内存中消失，可以提高内存的使用效率。\n\t\t\t\t\n###04.10_Java语言基础(循环结构注意事项之死循环)\n* A:一定要注意控制条件语句控制的那个变量的问题，不要弄丢了，否则就容易死循环。\n* B:两种最简单的死循环格式\n\t* while(true){...}\n\t* for(;;){...}\n\n###04.11_Java语言基础(循环结构循环嵌套输出4行5列的星星)\n* A:案例演示\n\t* 需求：请输出一个4行5列的星星(*)图案。\n\t* \n\t\t\t如图：\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t\n\t\t\t注意：\n\t\t\t\tSystem.out.println(\"*\");和System.out.print(\"*\");的区别\n* B:结论：\n\t* 外循环控制行数，内循环控制列数\n\n###04.12_Java语言基础(循环结构循环嵌套输出正三角形)\n* A:案例演示\n* \n\t\t需求：请输出下列的形状\n\t\t*\n\t\t**\n\t\t***\n\t\t****\n\t\t*****\n\n###04.13_Java语言基础(循环结构九九乘法表)\n* A:案例演示\n\t* 需求：在控制台输出九九乘法表。\n* B:代码优化\n* \n\t\t注意：\n\t\t'\\x' x表示任意，\\是转义符号,这种做法叫转移字符。\n\t\t\n\t\t'\\t'\ttab键的位置\n\t\t'\\r'\t回车\n\t\t'\\n'\t换行\n\t\t'\\\"'\n\t\t'\\''\n\n\t\n###04.14_Java语言基础(控制跳转语句break语句)\n* A:break的使用场景\n\t* 只能在switch和循环中 \n\n###04.15_Java语言基础(控制跳转语句continue语句)\n* A:continue的使用场景\n\t* 只能在循环中 \n\n###04.16_Java语言基础(控制跳转语句标号)\n* 标号:标记某个循环对其控制\n* 标号组成规则:其实就是合法的标识符\n\n###04.17_Java语言基础(控制调整语句练习)\n* A:练习题\n* \n\t\tfor(int x=1; x<=10; x++) {\n\t\t\tif(x%3==0) {\n\t\t\t\t//在此处填写代码\n\t\t\t}\n\t\t\tSystem.out.println(“Java基础班”);\n\t\t}\n\t\t\n\t\t我想在控制台输出2次:“Java基础班“\n\t\t我想在控制台输出7次:“Java基础班“\n\t\t我想在控制台输出13次:“Java基础班“\t\n\n\n###04.18_Java语言基础(控制跳转语句return语句)\n* A:return的作用\n\t* 返回\n\t* 其实它的作用不是结束循环的，而是结束方法的。\n* B:案例演示\n\t* return和break以及continue的区别?\n\t* return是结束方法\n\t* break是跳出循环\n\t* continue是终止本次循环继续下次循环\n\n\n###04.19_Java语言基础(方法概述和格式说明)\n* A:为什么要有方法\n\t* 提高代码的复用性 \n* B:什么是方法\n\t* 完成特定功能的代码块。 \n* C:方法的格式\n* \n\t\t修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {\n\t\t\t方法体语句;\n\t\t\treturn 返回值; \n\t\t} \n* D:方法的格式说明\n\t* 修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。\n\t* 返回值类型：就是功能结果的数据类型。\n\t* 方法名：符合命名规则即可。方便我们的调用。\n\t* 参数：\n\t\t* 实际参数：就是实际参与运算的。\n\t\t* 形式参数；就是方法定义上的，用于接收实际参数的。\n\t* 参数类型：就是参数的数据类型\n\t* 参数名：就是变量名\n\t* 方法体语句：就是完成功能的代码。\n\t* return：结束方法的。\n\t* 返回值：就是功能的结果，由return带给调用者。 \n\n###04.20_Java语言基础(方法之求和案例及其调用)\n* A:如何写一个方法\n\t* 1,明确返回值类型\n\t* 2,明确参数列表 \n* B:案例演示\n\t* 需求：求两个数据之和的案例\n* C:方法调用图解\n\n###04.21_Java语言基础(方法的注意事项)\n* A:方法调用(有具体返回值)\n\t* a:单独调用,一般来说没有意义，所以不推荐。\n\t* b:输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。\n\t* c:赋值调用,推荐方案。\n* B:案例演示\n\t* a:方法不调用不执行\n\t* b:方法与方法是平级关系，不能嵌套定义\n\t* c:方法定义的时候参数之间用逗号隔开\n\t* d:方法调用的时候不用在传递数据类型\n\t* e:如果方法有明确的返回值，一定要有return带回一个值\n\n###04.22_Java语言基础(方法的练习)\n* A:案例演示\n\t* 需求：键盘录入两个数据，返回两个数中的较大值\n* B:案例演示\n\t* 需求：键盘录入两个数据，比较两个数是否相等     \n\n\n###04.23_Java语言基础(方法之输出星形及其调用)\n* A:案例演示\n\t* 需求：根据键盘录入的行数和列数，在控制台输出星形\n* B:方法调用：(无返回值,void)\n\t* 单独调用\n\t* 输出调用(错误)\n\t* 赋值调用(错误)\n\n###04.24_Java语言基础(方法的练习)\n* A:案例演示\n\t* 需求：根据键盘录入的数据输出对应的乘法表\n\n###04.25_Java语言基础(方法重载概述和基本使用)\n* A:方法重载概述\n\t* 求和案例\n\t\t* 2个整数\n\t\t* 3个整数\n\t\t* 4个整数\n* B:方法重载：\n\t* 在同一个类中，方法名相同，参数列表不同。与返回值类型无关。\n\t\n\t* 参数列表不同：\n\t\t* A:参数个数不同\n\t\t* B:参数类型不同\n\t\t* C:参数的顺序不同(算重载,但是在开发中不用)\n\n\n###04.26_Java语言基础(方法重载练习比较数据是否相等)\n* A:案例演示\n\t* 需求：比较两个数据是否相等。\n\t* 参数类型分别为两个int类型，两个double类型，并在main方法中进行测试\n\n###04.27_day04总结\n把今天的知识点总结一遍。","categories":[],"tags":[]}
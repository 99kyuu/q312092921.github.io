{"title":"day07笔记","slug":"day07笔记","date":"2016-12-21T10:59:08.120Z","updated":"2016-12-21T10:20:50.661Z","comments":true,"path":"api/articles/day07笔记.json","excerpt":"","raw":"---\ntitle: day07笔记\n---\n###07.01_面向对象(构造方法Constructor概述和格式)(掌握)\n* A:构造方法概述和作用\n\t* 给对象的数据(属性)进行初始化\n* B:构造方法格式特点\n\t* a:方法名与类名相同(大小也要与类名一致)\n\t* b:没有返回值类型，连void都没有\n\t* c:没有具体的返回值return;\n\n###07.02_面向对象(构造方法的重载及注意事项)(掌握)\n* A:案例演示\n\t* 构造方法的重载\n\t* 重载:方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表\n* B:构造方法注意事项\n\t* a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。\n\t* b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。\n\t\t* 注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法\n\t\t\n###07.03_面向对象(给成员变量赋值的两种方式的区别)\n* A:setXxx()方法\n\t* 修改属性值 \n* B:构造方法\n\t* 给对象中属性进行初始化 \n\n###07.04_面向对象(学生类的代码及测试)(掌握)\n* A:案例演示\n\t* 学生类：\n\t\t* 成员变量：\n\t\t\t* name，age\n\t\t* 构造方法：\n\t\t\t* 无参，带两个参\n\t\t* 成员方法：\n\t\t\t* getXxx()/setXxx()\n\t\t\t* show()：输出该类的所有成员变量值\n* B:给成员变量赋值：\n\t* a:setXxx()方法\n\t* b:构造方法\n\t\n* C:输出成员变量值的方式：\n\t* a:通过getXxx()分别获取然后拼接\n\t* b:通过调用show()方法搞定\n\n###07.05_面向对象(手机类的代码及测试)(掌握)\n* A:案例演示\n\t* 模仿学生类，完成手机类代码\n\n###07.06_面向对象(创建一个对象的步骤)(掌握)\n* A:画图演示\n\t* 画图说明一个对象的创建过程做了哪些事情?\n\t* Student s = new Student();\n\t* 1,Student.class加载进内存\n\t* 2,声明一个Student类型引用s\n\t* 3,在堆内存创建对象,\n\t* 4,给对象中属性默认初始化值\n\t* 5,属性进行显示初始化\n\t* 6,构造方法进栈,对对象中的属性赋值,构造方法弹栈\n\t* 7,将对象的地址值赋值给s\n\n###07.07_面向对象(长方形案例练习)(掌握)\n* A:案例演示\n\t* 需求：\n\t\t* 定义一个长方形类,定义 求周长和面积的方法，\n\t\t* 然后定义一个测试类进行测试。\n\n###07.08_面向对象(员工类案例练习)(掌握)\n* A:案例演示\n\t* 需求：定义一个员工类Employee\n\t* 自己分析出几个成员，然后给出成员变量\n\t\t* 姓名name,工号id,工资salary \n\t* 构造方法，\n\t\t* 空参和有参的\n\t* getXxx()setXxx()方法，\n\t* 以及一个显示所有成员信息的方法。并测试。\n\t\t* work \n\n###07.09_面向对象(static关键字及内存图)(了解)\n* A:案例演示\n\t* 通过一个案例引入static关键字。\n\t* 人类：Person。每个人都有国籍，中国。\n\n* B:画图演示\n\t* 带有static的内存图\n \n###07.10_面向对象(static关键字的特点)(掌握)\n* A:static关键字的特点\n\t* a:随着类的加载而加载\n\t* b:优先于对象存在\n\t* c:被类的所有对象共享\n\t\t* 举例：咱们班级的学生应该共用同一个班级编号。\n\t\t* 其实这个特点也是在告诉我们什么时候使用静态?\n\t\t\t* 如果某个成员变量是被所有对象共享的，那么它就应该定义为静态的。\n\t\t* 举例：\n\t\t\t* 饮水机(用静态修饰)\n\t\t\t* 水杯(不能用静态修饰)\n\t\t\t* 共性用静态,特性用非静态\n\t* d:可以通过类名调用\n\t\t* 其实它本身也可以通过对象名调用。\n\t\t* 推荐使用类名调用。\n\t\t* 静态修饰的内容一般我们称其为：与类相关的，类成员\n* B:案例演示\n\t* static关键字的特点\n\n\n###07.11_面向对象(static的注意事项)(掌握)\n* A:static的注意事项\n\t* a:在静态方法中是没有this关键字的\n\t\t* 如何理解呢?\n\t\t\t* 静态是随着类的加载而加载，this是随着对象的创建而存在。\n\t\t\t* 静态比对象先存在。\n\t* b:静态方法只能访问静态的成员变量和静态的成员方法\n\t\t* 静态方法：\n\t\t\t* 成员变量：只能访问静态变量\n\t\t\t* 成员方法：只能访问静态成员方法\n\t\t* 非静态方法：\n\t\t\t* 成员变量：可以是静态的，也可以是非静态的\n\t\t\t* 成员方法：可是是静态的成员方法，也可以是非静态的成员方法。\n\t\t* 简单记：\n\t\t\t* 静态只能访问静态。\n* B:案例演示\n\t* static的注意事项\n\n###07.12_面向对象(静态变量和成员变量的区别)(掌握)\n* 静态变量也叫类变量  成员变量也叫对象变量\n* A:所属不同\n\t* 静态变量属于类，所以也称为为类变量\n\t* 成员变量属于对象，所以也称为实例变量(对象变量)\n* B:内存中位置不同\n\t* 静态变量存储于方法区的静态区\n\t* 成员变量存储于堆内存\n* C:内存出现时间不同\n\t* 静态变量随着类的加载而加载，随着类的消失而消失\n\t* 成员变量随着对象的创建而存在，随着对象的消失而消失\n* D:调用不同\n\t* 静态变量可以通过类名调用，也可以通过对象调用\n\t* 成员变量只能通过对 象名调用\n\n###07.13_面向对象(main方法的格式详细解释)(了解)\n* A:格式\n\t* public static void main(String[] args) {}\n* B:针对格式的解释\n\t* public 被jvm调用，访问权限足够大。\n\t* static 被jvm调用，不用创建对象，直接类名访问\n\t* void被jvm调用，不需要给jvm返回值\n\t* main 一个通用的名称，虽然不是关键字，但是被jvm识别\n\t* String[] args 以前用于接收键盘录入的\n* C:演示案例\n\t* 通过args接收键盘例如数据\n\n###07.14_面向对象(工具类中使用静态)(了解)\n* A:制作一个工具类\n\t* ArrayTool\n\t* 1,获取最大值\n\t* 2,数组的遍历\n\t* 3,数组的反转\n\t\n\n###07.15_面向对象(说明书的制作过程)(了解)\n* A:对工具类加入文档注释\n* B:通过javadoc命令生成说明书\n\t* @author(提取作者内容)\n\t* @version(提取版本内容)\n\t* javadoc -d 指定的文件目录 -author -version ArrayTool.java\n\t* @param 参数名称//形式参数的变量名称@return 函数运行完返回的数据\n\n###07.16_面向对象(如何使用JDK提供的帮助文档)(了解)\n* A:找到文档，打开文档\n* B:点击显示，找到索引，出现输入框\n* C:你应该知道你找谁?举例：Scanner\n* D:看这个类的结构(需不需要导包)\n\t* 成员变量\t字段\n\t* 构造方法\t构造方法\n\t* 成员方法\t方法\n\n###07.17_面向对象(学习Math类的随机数功能)(了解)\n* 打开JDK提供的帮助文档学习\n* A:Math类概述\n\t* 类包含用于执行基本数学运算的方法\n* B:Math类特点\n\t* 由于Math类在java.lang包下，所以不需要导包。\n\t* 因为它的成员全部是静态的,所以私有了构造方法\n* C:获取随机数的方法\n\t* public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。\n* D:我要获取一个1-100之间的随机数，肿么办?\n\t* int number = (int)(Math.random()*100)+1;\n\t\n###07.18_面向对象(猜数字小游戏案例)(了解)\n* A:案例演示\n\t* 需求：猜数字小游戏(数据在1-100之间)\n\n###07.19_day07总结\n把今天的知识点总结一遍。","categories":[],"tags":[]}